library(mapview)
WGS84<-"+init=epsg:4326"
lavaux <- st_read("data/lavaux/lavaux_polygon.shp")%>%
st_as_sf()%>%
st_transform(WGS84)%>%
#drop z component to map
st_zm(drop=T, what="ZM")
rhb <- st_read("data/rhb/rhb_polygon.shp")%>%
st_as_sf()%>%
st_transform(WGS84)%>%
#drop z component to map
st_zm(drop=T, what="ZM")
pufferzone_rhb<-rhb%>%
filter(rhb$type_de=='Pufferzone')%>%
#drop z component to map
st_zm(drop=T, what='ZM')
pufferzone_rhb<-rhb%>%
filter(rhb$type_de=='Pufferzone')%>%
#drop z component to map
st_zm(drop=T, what='ZM')
rhb_col <- colorFactor(palette=c("#ff3100", "#ff3100"), rhb$type_de)
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de),fillColor = ~rhb_col(type_de), fillOpacity = 0.5, weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de),fillColor = ~rhb_col(type_de), fillOpacity = 0.5, weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)%>%
addLegend()
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de),fillColor = ~rhb_col(type_de), fillOpacity = 0.5, weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)%>%
addLegend(color=~rhb_col(type_de))
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de),fillColor = ~rhb_col(type_de), fillOpacity = 0.5, weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)%>%
addLegend(color=~rhb_col(type_de), labels = c("huhu", "h"))
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de),fillColor = ~rhb_col(type_de), fillOpacity = 0.5, weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)%>%
addLegend(color=~rhb_col(type_de), labels = c("huhu", "h"))
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de),fillColor = ~rhb_col(type_de), fillOpacity = 0.5, weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)%>%
addLegend(color=c("#ff3100", "#ff3100"), labels = c("huhu", "h"))
map_rhb
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color="white", fillColor =~lavaux_col(type_de), weight=0.8, fillOpacity = 0.7)%>%
addProviderTiles(providers$Esri.WorldTopoMap)%>%
addLegend(color=c("#0c5da5", "#094275"), labels = c("huhu", "h"))
lavaux_col <- colorFactor(palette=c("#0c5da5", "#094275"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color="white", fillColor =~lavaux_col(type_de), weight=0.8, fillOpacity = 0.7)%>%
addProviderTiles(providers$Esri.WorldTopoMap)%>%
addLegend(color=c("#0c5da5", "#094275"), labels = c("huhu", "h"))
map_lavaux
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color="white", fillColor =~lavaux_col(type_de), weight=0.8, fillOpacity = 0.7)%>%
addProviderTiles(providers$Esri.WorldTopoMap)%>%
addLegend(color=c("#0c5da5", "#094275"), labels = c("buffer zone", "world heritage property"))
map_lavaux
rhb_col <- colorFactor(palette=c("#ff3100", "#ff9d86"), rhb$type_de)
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de),fillColor = ~rhb_col(type_de), fillOpacity = 0.5, weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)%>%
addLegend(color=c("#ff3100", "#ff3100"), labels = c("huhu", "h"))
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de),fillColor = ~rhb_col(type_de), fillOpacity = 0.5, weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)%>%
addLegend(color=c("#ff3100", "#ff9d86"), labels = c("huhu", "h"))
map_rhb
rhb_col <- colorFactor(palette=c("#ff9d86", "#ff3100"), rhb$type_de)
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de),fillColor = ~rhb_col(type_de), fillOpacity = 0.5, weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)%>%
addLegend(color=c("#ff3100", "#ff9d86"), labels = c("huhu", "h"))
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de),fillColor = ~rhb_col(type_de), fillOpacity = 0.5, weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)%>%
addLegend(color=c("#ff3100", "#ff9d86"), labels = c("buffer zone", "world heritage property"))
rhb_col <- colorFactor(palette=c("#ff3100", "#ff9d86"), rhb$type_de)
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de),fillColor = ~rhb_col(type_de), fillOpacity = 0.5, weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)%>%
addLegend(color=c("#ff3100", "#ff9d86"), labels = c("buffer zone", "world heritage property"))
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de),fillColor = ~rhb_col(type_de), fillOpacity = 0.5, weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)%>%
addLegend(color=c("#ff9d86", "#ff3100"), labels = c("buffer zone", "world heritage property"))
map_rhb
rhb_col <- colorFactor(palette=c("#ff9d86", "#ff3100"), rhb$type_de)
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de),fillColor = ~rhb_col(type_de), fillOpacity = 0.5, weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)%>%
addLegend(color=c("#ff9d86", "#ff3100"), labels = c("buffer zone", "world heritage property"))
map_rhb
mapshot(map_rhb, file = "plots/map_rhb.png")
lavaux_col <- colorFactor(palette=c("#0c5da5", "#094275"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color="white", fillColor =~lavaux_col(type_de), weight=0.8, fillOpacity = 0.7)%>%
addProviderTiles(providers$Esri.WorldTopoMap)%>%
addLegend(color=c("#0c5da5", "#094275"), labels = c("buffer zone", "world heritage property"))
map_lavaux
mapshot(map_lavaux, file = "plots/map_lavaux.png")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(jsonlite)
library(ggplot2)
library(dplyr)
library(sqldf)
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=";")
#group data and aggregate according to count
lavaux_flickr_subcategories<-sqldf('SELECT category, subcategory, sum(count) count FROM lavaux_flickr_categories GROUP BY subcategory')%>%
na.omit()%>%subset(subcategory!='')
#calculate percentage of each category
lavaux_flickr_subcategories$percentage<-lavaux_flickr_subcategories$count/sum(lavaux_flickr_subcategories$count)*100
lavaux_flickr_subcategories$site<-"lavaux"
#read in data
rhb_flickr_categories<-read.csv("data/rhb_flickr.csv", sep=";")
#group data and aggregate according to count
rhb_flickr_subcategories<- sqldf('SELECT category, subcategory, sum(count) count FROM rhb_flickr_categories GROUP BY subcategory')%>%
na.omit()%>% na.omit()%>%subset(subcategory!='')
#calculate percentage of each category
rhb_flickr_subcategories$percentage<-rhb_flickr_subcategories$count/sum(rhb_flickr_subcategories$count)*100
rhb_flickr_subcategories$site<-"rhb"
ggplot(rhb_flickr_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")
ggplot(rhb_flickr_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")
```{r}
ggplot(lavaux_flickr_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")
#look at only biopyhisical category
lavaux_biophysical <- lavaux_flickr_subcategories%>%subset(category=="biophysical")
#calculate percentage of each category
lavaux_biophysical$percentage<-lavaux_biophysical$count/sum(lavaux_biophysical$count)*100
#look at only biopyhisical category
rhb_biophysical <- rhb_flickr_subcategories%>%subset(category=="biophysical")
#calculate percentage of each category
rhb_biophysical$percentage<-rhb_biophysical$count/sum(rhb_biophysical$count)*100
#bind data
data_biopyhsical<-rhb_biophysical%>%
rbind(lavaux_biophysical)
#png("plots/biophysical_subcategories_flickr.png")
ggplot(data_biopyhsical, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
#look at only biopyhisical category
lavaux_biophysical <- lavaux_flickr_subcategories%>%subset(category=="biophysical")
#calculate percentage of each category
lavaux_biophysical$percentage<-lavaux_biophysical$count/sum(lavaux_biophysical$count)*100
#look at only biopyhisical category
rhb_biophysical <- rhb_flickr_subcategories%>%subset(category=="biophysical")
#calculate percentage of each category
rhb_biophysical$percentage<-rhb_biophysical$count/sum(rhb_biophysical$count)*100
#bind data
data_biopyhsical<-rhb_biophysical%>%
rbind(lavaux_biophysical)
#read in data
rhb_flickr_categories<-read.csv("data/rhb_flickr.csv", sep=";")
#group data and aggregate according to count
rhb_flickr_subcategories<- sqldf('SELECT category, subcategory, sum(count) count FROM rhb_flickr_categories GROUP BY subcategory')%>%
na.omit()%>% na.omit()%>%subset(subcategory!='')
#calculate percentage of each category
rhb_flickr_subcategories$percentage<-rhb_flickr_subcategories$count/sum(rhb_flickr_subcategories$count)*100
rhb_flickr_subcategories$site<-"rhb"
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=";")
#group data and aggregate according to count
lavaux_flickr_subcategories<-sqldf('SELECT category, subcategory, sum(count) count FROM lavaux_flickr_categories GROUP BY subcategory')%>%
na.omit()%>%subset(subcategory!='')
#calculate percentage of each category
lavaux_flickr_subcategories$percentage<-lavaux_flickr_subcategories$count/sum(lavaux_flickr_subcategories$count)*100
lavaux_flickr_subcategories$site<-"lavaux"
#read in data
rhb_flickr_categories<-read.csv("data/rhb_flickr.csv", sep=";")
#group data and aggregate according to count
rhb_flickr_subcategories<- sqldf('SELECT category, subcategory, sum(count) count FROM rhb_flickr_categories GROUP BY subcategory')%>%
na.omit()%>% na.omit()%>%subset(subcategory!='')
#calculate percentage of each category
rhb_flickr_subcategories$percentage<-rhb_flickr_subcategories$count/sum(rhb_flickr_subcategories$count)*100
rhb_flickr_subcategories$site<-"rhb"
ggplot(rhb_flickr_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")
ggplot(lavaux_flickr_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")
#look at only biopyhisical category
lavaux_biophysical <- lavaux_flickr_subcategories%>%subset(category=="biophysical")
#calculate percentage of each category
lavaux_biophysical$percentage<-lavaux_biophysical$count/sum(lavaux_biophysical$count)*100
#look at only biopyhisical category
rhb_biophysical <- rhb_flickr_subcategories%>%subset(category=="biophysical")
#calculate percentage of each category
rhb_biophysical$percentage<-rhb_biophysical$count/sum(rhb_biophysical$count)*100
#bind data
data_biopyhsical<-rhb_biophysical%>%
rbind(lavaux_biophysical)
#png("plots/biophysical_subcategories_flickr.png")
ggplot(data_biopyhsical, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
#dev.off()
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=";")
#group data and aggregate according to count
lavaux_flickr_subcategories<-sqldf('SELECT category, subcategory, sum(count) count FROM lavaux_flickr_categories GROUP BY subcategory')%>%
na.omit()%>%subset(subcategory!='')
#calculate percentage of each category
lavaux_flickr_subcategories$percentage<-lavaux_flickr_subcategories$count/sum(lavaux_flickr_subcategories$count)*100
lavaux_flickr_subcategories$site<-"lavaux"
#read in data
rhb_flickr_categories<-read.csv("data/rhb_flickr.csv", sep=";")
#group data and aggregate according to count
rhb_flickr_subcategories<- sqldf('SELECT category, subcategory, sum(count) count FROM rhb_flickr_categories GROUP BY subcategory')%>%
na.omit()%>% na.omit()%>%subset(subcategory!='')
#calculate percentage of each category
rhb_flickr_subcategories$percentage<-rhb_flickr_subcategories$count/sum(rhb_flickr_subcategories$count)*100
rhb_flickr_subcategories$site<-"rhb"
ggplot(rhb_flickr_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")
#look at only biopyhisical category
lavaux_biophysical <- lavaux_flickr_subcategories%>%subset(category=="biophysical")
#calculate percentage of each category
lavaux_biophysical$percentage<-lavaux_biophysical$count/sum(lavaux_biophysical$count)*100
#look at only biopyhisical category
rhb_biophysical <- rhb_flickr_subcategories%>%subset(category=="biophysical")
#calculate percentage of each category
rhb_biophysical$percentage<-rhb_biophysical$count/sum(rhb_biophysical$count)*100
#bind data
data_biopyhsical<-rhb_biophysical%>%
rbind(lavaux_biophysical)
#png("plots/biophysical_subcategories_flickr.png")
ggplot(data_biopyhsical, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
#dev.off()
#look at only biopyhisical category
lavaux_cultural <- lavaux_flickr_subcategories%>%subset(category=="cultural")
#calculate percentage of each category
lavaux_cultural$percentage<-lavaux_cultural$count/sum(lavaux_cultural$count)*100
#look at only biopyhisical category
rhb_cultural <- rhb_flickr_subcategories%>%subset(category=="cultural")
#calculate percentage of each category
rhb_cultural$percentage<-rhb_cultural$count/sum(rhb_cultural$count)*100
#bind data
data_cultural<-rhb_cultural%>%
rbind(lavaux_cultural)
#png("plots/cultural_subcategories_flickr.png")
ggplot(data_cultural, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
#dev.off()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(jsonlite)
library(ggplot2)
library(sqldf)
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=";")
#group data and aggregate according to count
lavaux_flickr_subcategories<-sqldf('SELECT category, subcategory, sum(count) count FROM lavaux_flickr_categories GROUP BY subcategory')%>%
na.omit()%>%subset(subcategory!='')
library(dplyr)
#group data and aggregate according to count
lavaux_flickr_subcategories<-sqldf('SELECT category, subcategory, sum(count) count FROM lavaux_flickr_categories GROUP BY subcategory')%>%
na.omit()%>%subset(subcategory!='')
#calculate percentage of each category
lavaux_flickr_subcategories$percentage<-lavaux_flickr_subcategories$count/sum(lavaux_flickr_subcategories$count)*100
lavaux_flickr_subcategories$site<-"lavaux"
#read in data
rhb_flickr_categories<-read.csv("data/rhb_flickr.csv", sep=";")
#group data and aggregate according to count
rhb_flickr_subcategories<- sqldf('SELECT category, subcategory, sum(count) count FROM rhb_flickr_categories GROUP BY subcategory')%>%
na.omit()%>% na.omit()%>%subset(subcategory!='')
#calculate percentage of each category
rhb_flickr_subcategories$percentage<-rhb_flickr_subcategories$count/sum(rhb_flickr_subcategories$count)*100
rhb_flickr_subcategories$site<-"rhb"
ggplot(rhb_flickr_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")
ggplot(lavaux_flickr_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")
#look at only biopyhisical category
lavaux_biophysical <- lavaux_flickr_subcategories%>%subset(category=="biophysical")
#calculate percentage of each category
lavaux_biophysical$percentage<-lavaux_biophysical$count/sum(lavaux_biophysical$count)*100
#look at only biopyhisical category
rhb_biophysical <- rhb_flickr_subcategories%>%subset(category=="biophysical")
#calculate percentage of each category
rhb_biophysical$percentage<-rhb_biophysical$count/sum(rhb_biophysical$count)*100
#bind data
data_biopyhsical<-rhb_biophysical%>%
rbind(lavaux_biophysical)
#png("plots/biophysical_subcategories_flickr.png")
ggplot(data_biopyhsical, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
#dev.off()
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=";")
#group data and aggregate according to count
lavaux_flickr_subcategories<-sqldf('SELECT category, subcategory, sum(count) count FROM lavaux_flickr_categories GROUP BY subcategory')%>%
na.omit()%>%subset(subcategory!='')
#calculate percentage of each category
lavaux_flickr_subcategories$percentage<-lavaux_flickr_subcategories$count/sum(lavaux_flickr_subcategories$count)*100
lavaux_flickr_subcategories$site<-"lavaux"
#look at only biopyhisical category
lavaux_biophysical <- lavaux_flickr_subcategories%>%subset(category=="biophysical")
#calculate percentage of each category
lavaux_biophysical$percentage<-lavaux_biophysical$count/sum(lavaux_biophysical$count)*100
#look at only biopyhisical category
rhb_biophysical <- rhb_flickr_subcategories%>%subset(category=="biophysical")
#calculate percentage of each category
rhb_biophysical$percentage<-rhb_biophysical$count/sum(rhb_biophysical$count)*100
#bind data
data_biopyhsical<-rhb_biophysical%>%
rbind(lavaux_biophysical)
#png("plots/biophysical_subcategories_flickr.png")
ggplot(data_biopyhsical, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
#dev.off()
png("plots/biophysical_subcategories_flickr.png")
ggplot(data_biopyhsical, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
dev.off()
#look at only biopyhisical category
lavaux_cultural <- lavaux_flickr_subcategories%>%subset(category=="cultural")
#calculate percentage of each category
lavaux_cultural$percentage<-lavaux_cultural$count/sum(lavaux_cultural$count)*100
#look at only biopyhisical category
rhb_cultural <- rhb_flickr_subcategories%>%subset(category=="cultural")
#calculate percentage of each category
rhb_cultural$percentage<-rhb_cultural$count/sum(rhb_cultural$count)*100
#bind data
data_cultural<-rhb_cultural%>%
rbind(lavaux_cultural)
#png("plots/cultural_subcategories_flickr.png")
ggplot(data_cultural, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
#dev.off()
png("plots/cultural_subcategories_flickr.png")
ggplot(data_cultural, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
dev.off()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(jsonlite)
library(ggplot2)
library(dplyr)
library(sqldf)
#read in data
lavaux_text_categories<-read.csv("data/lavaux_landschaft.csv", sep=";")
#group data and aggregate according to count
lavaux_text_subcategories<-sqldf('SELECT category, subcategory, sum(count) count FROM lavaux_text_categories GROUP BY subcategory')%>%
na.omit()%>%subset(subcategory!='')
#calculate percentage of each category
lavaux_text_subcategories$percentage<-lavaux_text_subcategories$count/sum(lavaux_text_subcategories$count)*100
lavaux_text_subcategories$site<-"lavaux"
#read in data
rhb_text_categories<-read.csv("data/rhb_landschaft.csv", sep=";")
#group data and aggregate according to count
rhb_text_subcategories<- sqldf('SELECT category, subcategory, sum(count) count FROM rhb_text_categories GROUP BY subcategory')%>%
na.omit()%>% na.omit()%>%subset(subcategory!='')
#calculate percentage of each category
rhb_text_subcategories$percentage<-rhb_text_subcategories$count/sum(rhb_text_subcategories$count)*100
rhb_text_subcategories$site<-"rhb"
rhb_text_subcategories$site<-"rhb"
```{r}
ggplot(rhb_text_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")
ggplot(lavaux_text_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")
#look at only biopyhisical category
lavaux_text_biophysical <- lavaux_text_subcategories%>%subset(category=="biophysical")
#calculate percentage of each category
lavaux_text_biophysical$percentage<-lavaux_text_biophysical$count/sum(lavaux_text_biophysical$count)*100
#look at only biopyhisical category
rhb_text_biophysical <- rhb_text_subcategories%>%subset(category=="biophysical")
#calculate percentage of each category
rhb_text_biophysical$percentage<-rhb_text_biophysical$count/sum(rhb_text_biophysical$count)*100
#bind data
data_text_biopyhsical<-rhb_text_biophysical%>%
rbind(lavaux_text_biophysical)
#png("plots/biophysical_subcategories_flickr.png")
ggplot(data_text_biopyhsical, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
#dev.off()
png("plots/biophysical_subcategories_text.png")
ggplot(data_text_biopyhsical, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
dev.off()
#look at only biopyhisical category
lavaux_text_cultural <- lavaux_text_subcategories%>%subset(category=="cultural")
#calculate percentage of each category
lavaux_text_cultural$percentage<-lavaux_text_cultural$count/sum(lavaux_text_cultural$count)*100
#look at only biopyhisical category
rhb_text_cultural <- rhb_flickr_subcategories%>%subset(category=="cultural")
#look at only biopyhisical category
lavaux_text_cultural <- lavaux_text_subcategories%>%subset(category=="cultural")
#calculate percentage of each category
lavaux_text_cultural$percentage<-lavaux_text_cultural$count/sum(lavaux_text_cultural$count)*100
#look at only biopyhisical category
rhb_text_cultural <- rhb_text_subcategories%>%subset(category=="cultural")
#calculate percentage of each category
rhb_text_cultural$percentage<-rhb_text_cultural$count/sum(rhb_text_cultural$count)*100
#bind data
data_text_cultural<-rhb_text_cultural%>%
rbind(lavaux_text_cultural)
#png("plots/cultural_subcategories_flickr.png")
ggplot(data_text_cultural, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
#dev.off()
#png("plots/biophysical_subcategories_text.png")
ggplot(data_text_biopyhsical, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
#dev.off()
png("plots/cultural_subcategories_text.png")
ggplot(data_text_cultural, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
dev.off()
#png("plots/cultural_subcategories_text.png")
ggplot(data_text_cultural, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
#dev.off()
