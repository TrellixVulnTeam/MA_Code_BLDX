ggplot(data_journals, aes(x=topic, y=V1, fill=topic, color=topic)) +
geom_boxplot()+
scale_y_continuous(trans="log10", limits=c(1, 500))+
#annotation_logticks(sides="lr")+
ylab("article count per magazine [count]")+
theme_bw()+
theme(legend.position = "none")+
xlab("")+
scale_fill_manual(values=c("lightblue", "red"))+
scale_color_manual(values=c("darkblue", "darkred"))
#make boxplot for texts per journal
ggplot(data_journals, aes(x=topic, y=V1, fill=topic, color=topic)) +
geom_boxplot()+
scale_y_continuous(trans="log10", limits=c(1, 500))+
#annotation_logticks(sides="lr")+
ylab("article count per magazine [count]")+
theme_bw()+
theme(legend.position = "none")+
xlab("")+
scale_fill_manual(values=c("#679fd2", "red"))+
scale_color_manual(values=c("#408dd2", "darkred"))
#make boxplot for texts per journal
ggplot(data_journals, aes(x=topic, y=V1, fill=topic, color=topic)) +
geom_boxplot()+
scale_y_continuous(trans="log10", limits=c(1, 500))+
#annotation_logticks(sides="lr")+
ylab("article count per magazine [count]")+
theme_bw()+
theme(legend.position = "none")+
xlab("")+
scale_fill_manual(values=c("#679fd2", "red"))+
scale_color_manual(values=c("#0c5da5", "darkred"))
#make boxplot for texts per journal
ggplot(data_journals, aes(x=topic, y=V1, fill=topic, color=topic)) +
geom_boxplot()+
scale_y_continuous(trans="log10", limits=c(1, 500))+
#annotation_logticks(sides="lr")+
ylab("article count per magazine [count]")+
theme_bw()+
theme(legend.position = "none")+
xlab("")+
scale_fill_manual(values=c("#679fd2", "#5c717b"))+
scale_color_manual(values=c("#0c5da5", "#fb0012"))
#make boxplot for texts per journal
ggplot(data_journals, aes(x=topic, y=V1, fill=topic, color=topic)) +
geom_boxplot()+
scale_y_continuous(trans="log10", limits=c(1, 500))+
#annotation_logticks(sides="lr")+
ylab("article count per magazine [count]")+
theme_bw()+
theme(legend.position = "none")+
xlab("")+
scale_fill_manual(values=c("#679fd2", "#fc717b"))+
scale_color_manual(values=c("#0c5da5", "#fb0012"))
fb0012
#make boxplot for texts per journal
ggplot(data_journals, aes(x=topic, y=V1, fill=topic, color=topic)) +
geom_boxplot()+
scale_y_continuous(trans="log10", limits=c(1, 500))+
#annotation_logticks(sides="lr")+
ylab("article count per magazine [count]")+
theme_bw()+
theme(legend.position = "none")+
xlab("")+
scale_fill_manual(values=c("#679fd2", "#ff8e73"))+
scale_color_manual(values=c("#0c5da5", "#fb0012"))
#make boxplot for texts per journal
ggplot(data_journals, aes(x=topic, y=V1, fill=topic, color=topic)) +
geom_boxplot()+
scale_y_continuous(trans="log10", limits=c(1, 500))+
#annotation_logticks(sides="lr")+
ylab("article count per magazine [count]")+
theme_bw()+
theme(legend.position = "none")+
xlab("")+
scale_fill_manual(values=c("#679fd2", "#ff8e73"))+
scale_color_manual(values=c("#0c5da5", "#ff3100"))
#make boxplot for texts per journal
ggplot(data_journals, aes(x=topic, y=V1, fill=topic, color=topic)) +
geom_boxplot()+
scale_y_continuous(trans="log10", limits=c(1, 500))+
#annotation_logticks(sides="lr")+
ylab("article count per magazine [count]")+
theme_bw()+
theme(legend.position = "none")+
xlab("")+
scale_fill_manual(values=c("#679fd2", "#559d86"))+
scale_color_manual(values=c("#0c5da5", "#ff3100"))
#make boxplot for texts per journal
ggplot(data_journals, aes(x=topic, y=V1, fill=topic, color=topic)) +
geom_boxplot()+
scale_y_continuous(trans="log10", limits=c(1, 500))+
#annotation_logticks(sides="lr")+
ylab("article count per magazine [count]")+
theme_bw()+
theme(legend.position = "none")+
xlab("")+
scale_fill_manual(values=c("#679fd2", "#ff9d86"))+
scale_color_manual(values=c("#0c5da5", "#ff3100"))
#make boxplot for texts per journal
ggplot(data_journals, aes(x=topic, y=V1, fill=topic, color=topic)) +
geom_boxplot()+
scale_y_continuous(trans="log10", limits=c(1, 500))+
#annotation_logticks(sides="lr")+
ylab("article count per magazine [count]")+
theme_bw()+
theme(legend.position = "none")+
xlab("")+
scale_fill_manual(values=c("#a8bcf6", "#ff9d86"))+
scale_color_manual(values=c("#0c5da5", "#ff3100"))
#make boxplot for images per user
ggplot(data_flickr, aes(x=topic, y=V1, fill=topic, color=topic)) +
geom_boxplot()+
scale_y_continuous(trans="log10", limits=c(1, 1200))+
#annotation_logticks(sides="lr")+
ylab("image count per user [count]")+
theme_bw()+
theme(legend.position = "none")+
xlab("")+
scale_fill_manual(values=c("#a8bcf6", "#ff9d86"))+
scale_color_manual(values=c("#0c5da5", "#ff3100"))
#save data as dataframe & rename the columns
data_rhb_df<-as.data.frame(as.matrix(data_rhb))
data_lavaux_df<-as.data.frame(as.matrix(data_lavaux))
data_lavaux_df<-cbind(journal=rownames(data_lavaux_df), data_lavaux_df)%>%
cbind(topic="lavaux")
data_lavaux_df$V1<-unlist(data_lavaux_df$V1)
rownames(data_lavaux_df)<-NULL
data_rhb_df<-cbind(journal=rownames(data_rhb_df), data_rhb_df)%>%
cbind(topic="rhb")
data_rhb_df$V1<-unlist(data_rhb_df$V1)
rownames(data_rhb_df)<- NULL
data_journals<-data_rhb_df%>%
rbind(data_lavaux_df)
png("plots/texts_per_journal.png")
#make boxplot for texts per journal
ggplot(data_journals, aes(x=topic, y=V1, fill=topic, color=topic)) +
geom_boxplot()+
scale_y_continuous(trans="log10", limits=c(1, 500))+
#annotation_logticks(sides="lr")+
ylab("article count per magazine [count]")+
theme_bw()+
theme(legend.position = "none")+
xlab("")+
scale_fill_manual(values=c("#a8bcf6", "#ff9d86"))+
scale_color_manual(values=c("#0c5da5", "#ff3100"))
dev.off()
#save data as dataframe & rename the columns
flickr_rhb_df<-as.data.frame(as.matrix(flickr_rhb))
flickr_lavaux_df<-as.data.frame(as.matrix(flickr_lavaux))
flickr_lavaux_df<-cbind(journal=rownames(flickr_lavaux_df), flickr_lavaux_df)%>%
cbind(topic="lavaux")
flickr_lavaux_df$V1<-unlist(flickr_lavaux_df$V1)
rownames(flickr_lavaux_df)<-NULL
flickr_rhb_df<-cbind(journal=rownames(flickr_rhb_df), flickr_rhb_df)%>%
cbind(topic="rhb")
flickr_rhb_df$V1<-unlist(flickr_rhb_df$V1)
rownames(flickr_rhb_df)<- NULL
data_flickr<-flickr_rhb_df%>%
rbind(flickr_lavaux_df)
png("plots/images_per_user.png")
#make boxplot for images per user
ggplot(data_flickr, aes(x=topic, y=V1, fill=topic, color=topic)) +
geom_boxplot()+
scale_y_continuous(trans="log10", limits=c(1, 1200))+
#annotation_logticks(sides="lr")+
ylab("image count per user [count]")+
theme_bw()+
theme(legend.position = "none")+
xlab("")+
scale_fill_manual(values=c("#a8bcf6", "#ff9d86"))+
scale_color_manual(values=c("#0c5da5", "#ff3100"))
dev.off()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(jsonlite)
library(ggplot2)
library(dplyr)
lavaux_categories<-read.csv("data/lavaux_landschaft.csv")
View(lavaux_categories)
lavaux_categories<-read.csv("data/lavaux_landschaft.csv", sep=";")
lavaux_categories[rowSums(is.na(lavaux_categories)) == 0,]
by_cyl <- lavaux_categories %>% group_by(category)
View(by_cyl)
View(by_cyl)
by_cyl <- lavaux_categories %>% group_by(category)%>%
summarise(mean_home_run = sum(count))
View(by_cyl)
lavaux_categories<-read.csv("data/lavaux_landschaft.csv", sep=";")
by_cyl <- lavaux_categories %>% group_by(category)%>%
summarise(count = sum(count))
lavaux_categories <- lavaux_categories %>% group_by(category)%>%
summarise(count = sum(count))
View(by_cyl)
lavaux_categories<-read.csv("data/lavaux_landschaft.csv", sep=";")
lavaux_categories_grouped <- lavaux_categories %>% group_by(category)%>%
summarise(count = sum(count))
View(by_cyl)
View(lavaux_categories_grouped)
lavaux_categories<-read.csv("data/lavaux_landschaft.csv", sep=";")%>%na.omit()
View(lavaux_categories)
View(lavaux_categories)
lavaux_categories_grouped <- lavaux_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()
View(lavaux_categories_grouped)
View(lavaux_categories_grouped)
avaux_categories_grouped[complete.cases(avaux_categories_grouped),]
lavaux_categories_grouped[complete.cases(lavaux_categories_grouped),]
x<-lavaux_categories_grouped[complete.cases(lavaux_categories_grouped),]
#read in data
lavaux_categories<-read.csv("data/lavaux_landschaft.csv", sep=";")
#group data and aggregate according to count
lavaux_categories_grouped <- lavaux_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()
#read in data
rhb_categories<-read.csv("data/rhb_landschaft.csv", sep=";")
#group data and aggregate according to count
rhb_categories_grouped <- rhb_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()
View(rhb_categories)
View(rhb_categories_grouped)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(jsonlite)
library(ggplot2)
library(dplyr)
#read in data
lavaux_categories<-read.csv("data/lavaux_landschaft.csv", sep=";")
#group data and aggregate according to count
lavaux_categories_grouped <- lavaux_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()
#read in data
rhb_categories<-read.csv("data/rhb_landschaft.csv", sep=";")
#group data and aggregate according to count
rhb_categories_grouped <- rhb_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()
View(lavaux_categories_grouped)
#plotting data
#make boxplot for texts per journal
ggplot(lavaux_categories_grouped, aes(x=category, y=count)) +
geom_bar()
geom_bar(stat="category")
#plotting data
#make boxplot for texts per journal
ggplot(lavaux_categories_grouped, aes(x=category) +
geom_bar(stat="category"))
#plotting data
#make boxplot for texts per journal
ggplot(rhb_categories_grouped, aes(x=category)+
#plotting data
#make boxplot for texts per journal
ggplot(rhb_categories_grouped, aes(x=category)+
geom_bar(stat="bin", width=0.7, fill="steelblue")+
theme_minimal()
#plotting data
#make boxplot for texts per journal
ggplot(rhb_categories_grouped, aes(x=category))+
geom_bar(stat="bin", width=0.7, fill="steelblue")+
theme_minimal()
#plotting data
#make boxplot for texts per journal
ggplot(rhb_categories_grouped, aes(x=category))+
geom_bar(stat="count", width=0.7, fill="steelblue")+
theme_minimal()
str(rhb_categories_grouped$count)
#plotting data
#make boxplot for texts per journal
ggplot(rhb_categories_grouped, aes(x=category, y=count))+
geom_bar(stat="count", width=0.7, fill="steelblue")+
theme_minimal()
#plotting data
#make boxplot for texts per journal
ggplot(rhb_categories_grouped, aes(x=category, y=count))+
geom_bar(stat="identity", width=0.7, fill="steelblue")+
theme_minimal()
#plotting data
ggplot(rhb_categories_grouped, aes(x=category, y=count))+
geom_bar(stat="identity", width=0.7, fill="steelblue")+
theme_minimal()
#plotting data
ggplot(lavaux_categories_grouped, aes(x=category, y=count))+
geom_bar(stat="identity", width=0.7, fill="steelblue")+
theme_minimal()
sum(rhb_categories_grouped$count)
rhb_categories_grouped$percentage<-rhb_categories_grouped/sum(rhb_categories_grouped)*100
rhb_categories_grouped$percentage<-rhb_categories_grouped$count/sum(rhb_categories_grouped$count)*100
View(rhb_categories_grouped)
#calculate percentage of each category
lavaux_categories_grouped$percentage<-lavaux_categories_grouped$count/sum(lavaux_categories_grouped$count)*100
#plotting data
ggplot(lavaux_categories_grouped, aes(x=category, y=percentage))+
geom_bar(stat="identity", width=0.7, fill="steelblue")+
theme_minimal()
#plotting data
ggplot(rhb_categories_grouped, aes(x=category, y=percentage))+
geom_bar(stat="identity", width=0.7, fill="steelblue")+
theme_minimal()
#plotting data
ggplot(rhb_categories_grouped, aes(x=category, y=percentage))+
geom_bar(stat="identity", width=0.7, fill="red")+
theme_minimal()
rhb_categories_grouped$site<-"rhb"
lavaux_categories_grouped$site<-"lavaux"
#bind data
data_categories<-rhb_categories_grouped%>%
rbind(lavaux_categories_grouped)
#plotting data
ggplot(data_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity")+
theme_minimal()
#plotting data
ggplot(data_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge())+
theme_minimal()
#plotting data
ggplot(data_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge())+
theme_minimal()+
ylim(0,100)
#plotting data
ggplot(data_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge())+
theme_minimal()+
ylim(0,100)+
ylab("percentage [%]")
#plotting data
ggplot(data_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,100)+
ylab("percentage [%]")
#plotting data
ggplot(data_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,50)+
ylab("percentage [%]")
#plotting data
ggplot(data_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,50)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#a8bcf6", "#ff9d86"))
#plotting data
ggplot(data_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,50)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
#plotting data
png("plots/categories_text.png")
ggplot(data_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,50)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
dev.off()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(jsonlite)
library(ggplot2)
library(dplyr)
#read in data
lavaux_categories<-read.csv("data/lavaux_landschaft.csv", sep=";")
#group data and aggregate according to count
lavaux_categories_grouped <- lavaux_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()
#calculate percentage of each category
lavaux_categories_grouped$percentage<-lavaux_categories_grouped$count/sum(lavaux_categories_grouped$count)*100
lavaux_categories_grouped$site<-"lavaux"
#read in data
rhb_categories<-read.csv("data/rhb_landschaft.csv", sep=";")
#group data and aggregate according to count
rhb_categories_grouped <- rhb_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()
#calculate percentage of each category
rhb_categories_grouped$percentage<-rhb_categories_grouped$count/sum(rhb_categories_grouped$count)*100
rhb_categories_grouped$site<-"rhb"
#bind data
data_categories<-rhb_categories_grouped%>%
rbind(lavaux_categories_grouped)
#plotting data
png("plots/categories_text.png")
ggplot(data_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,50)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
dev.off()
#plotting data
#png("plots/categories_text.png")
ggplot(data_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,50)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
#dev.off()
#read in data
rhb_flickr_categories<-read.csv("data/rhb_flickr.csv", sep=";")
View(rhb_flickr_categories)
#group data and aggregate according to count
rhb_flickr_grouped <- rhb_flickr_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()
View(rhb_flickr_grouped)
View(rhb_flickr_grouped)
#calculate percentage of each category
rhb_flickr_grouped$percentage<-rhb_flickr_grouped$count/sum(rhb_flickr_grouped$count)*100
View(rhb_flickr_grouped)
ggplot(rhb_flickr_grouped, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,50)+
ylab("percentage [%]")
ggplot(rhb_flickr_grouped, aes(x=category, y=percentage))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,50)+
ylab("percentage [%]")
#read in data
rhb_flickr_categories<-read.csv("data/rhb_flickr.csv", sep=";")
#group data and aggregate according to count
rhb_flickr_grouped <- rhb_flickr_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()
#calculate percentage of each category
rhb_flickr_grouped$percentage<-rhb_flickr_grouped$count/sum(rhb_flickr_grouped$count)*100
ggplot(rhb_flickr_grouped, aes(x=category, y=percentage))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,50)+
ylab("percentage [%]")
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=";")
#group data and aggregate according to count
lavaux_flickr_grouped <- lavaux_flickr_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()
#calculate percentage of each category
lavaux_flickr_grouped$percentage<-lavaux_flickr_grouped$count/sum(lavaux_flickr_grouped$count)*100
lavaux_flickr_grouped$site<-"lavaux"
#read in data
rhb_flickr_categories<-read.csv("data/rhb_flickr.csv", sep=";")
#group data and aggregate according to count
rhb_flickr_grouped <- rhb_flickr_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()
#calculate percentage of each category
rhb_flickr_grouped$percentage<-rhb_flickr_grouped$count/sum(rhb_flickr_grouped$count)*100
rhb_flickr_grouped$site<-"rhb"
#bind data
flickr_categories<-rhb_flickr_grouped%>%
rbind(lavaux_flickr_grouped)
#plotting data
#png("plots/categories_text.png")
ggplot(flickr_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,50)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
#dev.off()
View(rhb_flickr_categories)
View(rhb_flickr_categories)
View(rhb_categories_grouped)
View(rhb_categories_grouped)
View(flickr_categories)
#plotting data
#png("plots/categories_text.png")
ggplot(flickr_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,50)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
#dev.off()
#bind data
flickr_categories<-rhb_flickr_grouped%>%
rbind(lavaux_flickr_grouped)%>%na.omit()
View(flickr_categories)
View(data_categories)
View(flickr_categories)
#png("plots/categories_text.png")
ggplot(flickr_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,60)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
#png("plots/categories_text.png")
ggplot(flickr_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,70)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
flickr_categories<-flickr_categories[!apply(flickr_categories == "", 1, all), ]
View(flickr_categories)
flickr_categories[!apply(flickr_categories == "", 1, all), ]
flickr_categories[rowSums(is.na(flickr_categories)) != ncol(flickr_categories), ]
flickr_categories[rowSums(is.na(flickr_categories)) != ncol(flickr_categories), ]
png("plots/categories_flickr.png")
#plotting data
png("plots/categories_flickr.png")
ggplot(flickr_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,70)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
dev.off()
