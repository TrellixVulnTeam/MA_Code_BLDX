#group data and aggregate according to count
lavaux_categories_grouped <- lavaux_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()%>%subset(category!='')
#calculate percentage of each category
lavaux_categories_grouped$percentage<-lavaux_categories_grouped$count/sum(lavaux_categories_grouped$count)*100
lavaux_categories_grouped$site<-"lavaux"
#read in data
rhb_categories<-read.csv("data/rhb_landschaft.csv", sep=";")
rhb_subset<-rhb_categories%>%subset(category!='')
#group data and aggregate according to count
rhb_categories_grouped <- rhb_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()%>%subset(category!='')
#calculate percentage of each category
rhb_categories_grouped$percentage<-rhb_categories_grouped$count/sum(rhb_categories_grouped$count)*100
rhb_categories_grouped$site<-"rhb"
#bind data
data_categories<-rhb_categories_grouped%>%
rbind(lavaux_categories_grouped)
#plotting data
#png("plots/categories_text.png")
ggplot(data_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
#dev.off()
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=",")
#group data and aggregate according to count
lavaux_flickr_grouped <- lavaux_flickr_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()%>%subset(category!='')
#calculate percentage of each category
lavaux_flickr_grouped$percentage<-lavaux_flickr_grouped$count/sum(lavaux_flickr_grouped$count)*100
lavaux_flickr_grouped$site<-"lavaux"
#read in data
rhb_flickr_categories<-read.csv("data/rhb_flickr.csv", sep=",")
#group data and aggregate according to count
rhb_flickr_grouped <- rhb_flickr_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()%>%subset(category!='')
#calculate percentage of each category
rhb_flickr_grouped$percentage<-rhb_flickr_grouped$count/sum(rhb_flickr_grouped$count)*100
rhb_flickr_grouped$site<-"rhb"
#bind data
flickr_categories<-rhb_flickr_grouped%>%
rbind(lavaux_flickr_grouped)%>%subset(category!='')
#plotting data
#png("plots/categories_flickr.png")
ggplot(flickr_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
#dev.off()
#plotting data
png("plots/categories_text.png")
ggplot(data_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
dev.off()
#plotting data
png("plots/categories_flickr.png")
ggplot(flickr_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
dev.off()
View(flickr_categories)
View(flickr_categories)
View(flickr_categories)
View(flickr_categories)
View(rhb_flickr_categories)
View(rhb_flickr_categories)
View(rhb_flickr_grouped)
View(rhb_flickr_grouped)
head(rhb_flickr_categories)
head(rhb_flickr_grouped)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(jsonlite)
library(ggplot2)
library(dplyr)
#read in data
lavaux_categories<-read.csv("data/lavaux_landschaft.csv", sep=";")
lavaux_subset<-lavaux_categories%>%subset(category!='')
#group data and aggregate according to count
lavaux_categories_grouped <- lavaux_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()%>%subset(category!='')
#calculate percentage of each category
lavaux_categories_grouped$percentage<-lavaux_categories_grouped$count/sum(lavaux_categories_grouped$count)*100
lavaux_categories_grouped$site<-"lavaux"
#read in data
rhb_categories<-read.csv("data/rhb_landschaft.csv", sep=";")
rhb_subset<-rhb_categories%>%subset(category!='')
#group data and aggregate according to count
rhb_categories_grouped <- rhb_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()%>%subset(category!='')
#calculate percentage of each category
rhb_categories_grouped$percentage<-rhb_categories_grouped$count/sum(rhb_categories_grouped$count)*100
rhb_categories_grouped$site<-"rhb"
#bind data
data_categories<-rhb_categories_grouped%>%
rbind(lavaux_categories_grouped)
#plotting data
#png("plots/categories_text.png")
ggplot(data_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
#dev.off()
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=",")
#group data and aggregate according to count
lavaux_flickr_grouped <- lavaux_flickr_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()%>%subset(category!='')
#calculate percentage of each category
lavaux_flickr_grouped$percentage<-lavaux_flickr_grouped$count/sum(lavaux_flickr_grouped$count)*100
lavaux_flickr_grouped$site<-"lavaux"
#read in data
rhb_flickr_categories<-read.csv("data/rhb_flickr.csv", sep=",")
#group data and aggregate according to count
rhb_flickr_grouped <- rhb_flickr_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()%>%subset(category!='')
#read in data
rhb_flickr_categories<-read.csv("data/rhb_flickr.csv", sep=",")
View(lavaux_flickr_categories)
View(lavaux_flickr_categories)
View(lavaux_flickr_categories)
View(lavaux_flickr_categories)
#group data and aggregate according to count
rhb_flickr_grouped <- rhb_flickr_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()%>%subset(category!='')
#read in data
rhb_flickr_categories<-read.csv("data/rhb_flickr.csv", sep=",")
View(rhb_flickr_categories)
View(rhb_flickr_categories)
#read in data
rhb_flickr_categories<-read.csv("data/rhb_flickr.csv", sep=";")
View(rhb_flickr_categories)
#group data and aggregate according to count
rhb_flickr_grouped <- rhb_flickr_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()%>%subset(category!='')
#calculate percentage of each category
rhb_flickr_grouped$percentage<-rhb_flickr_grouped$count/sum(rhb_flickr_grouped$count)*100
rhb_flickr_grouped$site<-"rhb"
#bind data
flickr_categories<-rhb_flickr_grouped%>%
rbind(lavaux_flickr_grouped)%>%subset(category!='')
#plotting data
#png("plots/categories_flickr.png")
ggplot(flickr_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
#dev.off()
#plotting data
png("plots/categories_flickr.png")
ggplot(flickr_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
dev.off()
R.version()
v<-R.version()
sessionInfo()
library(rgdal)
shp <- readORG(dsn = "data/lavaux/lavaux", layer = "lavaux_polygon")
library(rgdal)
shp <- readORG(dsn = "data/lavaux/lavaux", layer = "lavaux_polygon")
shp <- readORG(dsn = "data/lavaux/lavaux", layer = "lavaux_polygon")
library(sp)
shp <- readORG(dsn = "data/lavaux/lavaux", layer = "lavaux_polygon")
shp <- readOGR(dsn = "data/lavaux/lavaux", layer = "lavaux_polygon")
shp <- readOGR(dsn = "data/lavaux/lavaux", layer = "lavaux_polygon")
library(tmap)
shp <- read_shape("data/lavaux/lavaux_polygon.shp")
shp <- read_shape("data/lavaux/lavaux_polygon.shp")
library(tmap)
shp <- read_shape("data/lavaux/lavaux_polygon.shp")
library(tmap)
read_shape
shp <- tmap::read_shape("data/lavaux/lavaux_polygon.shp")
??read_shape
shp <- st_read("data/lavaux/lavaux_polygon.shp")
library(sf)
shp <- st_read("data/lavaux/lavaux_polygon.shp")
#creating map
map <- leaflet(data = lavaux) %>%
addTiles()
library(leaflet)
#creating map
map <- leaflet(data = lavaux) %>%
addTiles()
lavaux <- st_read("data/lavaux/lavaux_polygon.shp")
#creating map
map <- leaflet(data = lavaux) %>%
addTiles()
map
rhb <- st_read("data/rhb/rhb_polygon.shp")
#creating map
map <- leaflet(data = rhb) %>%
addTiles()
map
#creating map
map <- leaflet(data = rhb) %>%
addPolygons(
color="red"
)
addTiles()
#creating map
map <- leaflet(data = rhb) %>%
addPolygons(
color="red"
)%>%
addTiles()
map
lavaux <- st_read("data/lavaux/lavaux_polygon.shp")%>%spTransform(CRS("+proj=longlat +datum=WGS84 +no_defs"))
lavaux <- st_read("data/lavaux/lavaux_polygon.shp")%>%st_transform(CRS("+proj=longlat +datum=WGS84 +no_defs"))
rhb <- st_read("data/rhb/rhb_polygon.shp")%>%st_transform(CRS("+proj=longlat +datum=WGS84 +no_defs"))
#creating map
map <- leaflet(data = rhb) %>%
addPolygons(
color="red"
)%>%
addTiles()
map
#creating map
map <- leaflet(data = rhb) %>%
addTiles()
map
#creating map
map <- leaflet() %>%
addPolygons(data=rhb, weight=5, col="red")
addTiles()
#creating map
map <- leaflet() %>%
addPolygons(data=rhb, weight=5, col="red")%>%
addTiles()
map
View(rhb)
View(rhb)
rhb <- st_read("data/rhb/rhb_polygon.shp")%>%
st_as_sf()%>%
st_transform(WGS84)
WGS84<-"+init=epsg:4326"
rhb <- st_read("data/rhb/rhb_polygon.shp")%>%
st_as_sf()%>%
st_transform(WGS84)
#creating map
map <- leaflet() %>%
addPolygons(data=rhb, weight=5, col="red")%>%
addTiles()
map
pufferzone_rhb<-rhb%>%
filter(rhb$type_de=='Pufferzone')
#creating map
map <- leaflet() %>%
addPolygons(data=pufferzone_rhb, weight=5, col="red")%>%
addTiles()
map
View(pufferzone_rhb)
#creating map
map <- leaflet() %>%
addPolygons(data=pufferzone_rhb$geometry, weight=5, col="red")%>%
addTiles()
#creating map
map <- leaflet() %>%
addPolygons(data=pufferzone_rhb$geometry, weight=5, col="red")%>%
addTiles()
map
#creating map
map <- leaflet() %>%
addPolygons(data=pufferzone_rhb$geometry, weight=5, col="red")%>%
addTiles()
map
#creating map
map <- leaflet() %>%
addPolygons(data=pufferzone_rhb$geometry)%>%
addTiles()
map
#creating map
mapui <- leaflet() %>%
addPolygons(data=pufferzone_rhb$geometry)%>%
addTiles()
mapui
#creating map
mapui <- leaflet() %>%
addPolygons(data=pufferzone_rhb)%>%
addTiles()
mapui
plot(pufferzone_rhb)
pufferzone_rhb
pufferzone_rhb<-rhb%>%
filter(rhb$type_de=='Pufferzone')%>%
st_zm(drop=T, what=Z)
pufferzone_rhb<-rhb%>%
filter(rhb$type_de=='Pufferzone')%>%
st_zm(drop=T, what='Z')
pufferzone_rhb<-rhb%>%
filter(rhb$type_de=='Pufferzone')%>%
st_zm(drop=T, what='ZM')
pufferzone_rhb
#creating map
mapui <- leaflet() %>%
addPolygons(data=pufferzone_rhb)%>%
addTiles()
mapui
rhb <- st_read("data/rhb/rhb_polygon.shp")%>%
st_as_sf()%>%
st_transform(WGS84)%>%
st_zm(drop=T, what="ZM")
#creating map
mapui <- leaflet() %>%
addPolygons(data=rhb)%>%
addTiles()
mapui
lavaux <- st_read("data/lavaux/lavaux_polygon.shp")%>%
st_as_sf()%>%
st_transform(WGS84)%>%
#drop z component to map
st_zm(drop=T, what="ZM")
#creating map
mapui <- leaflet() %>%
addPolygons(data=rhb)%>%
addPolygons(data=lavaux, color="red")%>%
addTiles()
mapui
#creating map
mapui <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addPolygons(data=lavaux)%>%
addTiles()
mapui
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux)%>%
addTiles()
map_lavaux
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux)%>%
addProviderTiles(providers$Esri.WorldGrayCanvas, options = providerTileOptions(opacity = 0.7))
map_lavaux
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.8))
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 1))
map_rhb
?addProviderTiles
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$Stadia.AlidadeSmooth, options = providerTileOptions(opacity = 1))
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$Thunderforest.Landscape, options = providerTileOptions(opacity = 1))
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$Thunderforest.Landscape)
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$CartoDB.Positron)
map_rhb
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux)%>%
addProviderTiles(providers$Thunderforest.Landscape, options = providerTileOptions(opacity = 0.7))
map_lavaux
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux)%>%
addProviderTiles(providers$Esri.WorldTopoMap, options = providerTileOptions(opacity = 0.7))
map_lavaux
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$Esri.WorldTopoMap)
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$Esri.WorldTopoMap)
map_rhb
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~type_de)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
beatCol <- colorFactor(palette = 'RdYlGn', lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~beatCol(type_de))%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
beatCol <- colorFactor(palette = values=c("#0c5da5", "#ff3100"), lavaux$type_de)
beatCol <- colorFactor(palette=c("#0c5da5", "#ff3100"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~beatCol(type_de))%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
beatCol <- colorFactor(palette=c("#a8bcf6", "#ff9d86"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~beatCol(type_de))%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
beatCol <- colorFactor(palette=c("#a8bcf6", "#0c5da5"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~beatCol(type_de))%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~beatCol(type_de), fill = beatCol(type_de))%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~beatCol(type_de), fill = ~beatCol(type_de))%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~beatCol(type_de), weight=0.5)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de))%>%
addProviderTiles(providers$Esri.WorldTopoMap)
rhb_col <- colorFactor(palette=c("#ff9d86", "#ff3100"), rhb$type_de)
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de))%>%
addProviderTiles(providers$Esri.WorldTopoMap)
map_rhb
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~lavaux_col(type_de), weight=0.5)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
lavaux_col <- colorFactor(palette=c("#a8bcf6", "#0c5da5"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~lavaux_col(type_de), weight=0.5)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de))%>%
addProviderTiles(providers$Esri.WorldTopoMap)
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de), weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)
map_rhb
rhb_col <- colorFactor(palette=c("#ff3100", "#ff3100"), rhb$type_de)
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de), weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)
map_rhb
lavaux_col <- colorFactor(palette=c("#0c5da5", "#0c5da5"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~lavaux_col(type_de), weight=0.5)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
lavaux_col <- colorFactor(palette=c("#0c5da5", "#094275"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~lavaux_col(type_de), weight=0.5)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
lavaux_col <- colorFactor(palette=c("#0c5da5", "#094275"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~lavaux_col(type_de), weight=0.5)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
lavaux_col <- colorFactor(palette=c("#0c5da5", "#094275"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~lavaux_col(type_de), weight=0.5)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
rhb_col <- colorFactor(palette=c("#ff3100", "#ff3100"), rhb$type_de)
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de), weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)
map_rhb
