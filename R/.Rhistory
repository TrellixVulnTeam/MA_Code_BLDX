rhb <- st_read("data/rhb/rhb_polygon.shp")%>%
st_as_sf()%>%
st_transform(WGS84)%>%
st_zm(drop=T, what="ZM")
#creating map
mapui <- leaflet() %>%
addPolygons(data=rhb)%>%
addTiles()
mapui
lavaux <- st_read("data/lavaux/lavaux_polygon.shp")%>%
st_as_sf()%>%
st_transform(WGS84)%>%
#drop z component to map
st_zm(drop=T, what="ZM")
#creating map
mapui <- leaflet() %>%
addPolygons(data=rhb)%>%
addPolygons(data=lavaux, color="red")%>%
addTiles()
mapui
#creating map
mapui <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addPolygons(data=lavaux)%>%
addTiles()
mapui
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux)%>%
addTiles()
map_lavaux
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux)%>%
addProviderTiles(providers$Esri.WorldGrayCanvas, options = providerTileOptions(opacity = 0.7))
map_lavaux
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.8))
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 1))
map_rhb
?addProviderTiles
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$Stadia.AlidadeSmooth, options = providerTileOptions(opacity = 1))
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$Thunderforest.Landscape, options = providerTileOptions(opacity = 1))
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$Thunderforest.Landscape)
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$CartoDB.Positron)
map_rhb
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux)%>%
addProviderTiles(providers$Thunderforest.Landscape, options = providerTileOptions(opacity = 0.7))
map_lavaux
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux)%>%
addProviderTiles(providers$Esri.WorldTopoMap, options = providerTileOptions(opacity = 0.7))
map_lavaux
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$Esri.WorldTopoMap)
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color='red')%>%
addProviderTiles(providers$Esri.WorldTopoMap)
map_rhb
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~type_de)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
beatCol <- colorFactor(palette = 'RdYlGn', lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~beatCol(type_de))%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
beatCol <- colorFactor(palette = values=c("#0c5da5", "#ff3100"), lavaux$type_de)
beatCol <- colorFactor(palette=c("#0c5da5", "#ff3100"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~beatCol(type_de))%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
beatCol <- colorFactor(palette=c("#a8bcf6", "#ff9d86"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~beatCol(type_de))%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
beatCol <- colorFactor(palette=c("#a8bcf6", "#0c5da5"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~beatCol(type_de))%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~beatCol(type_de), fill = beatCol(type_de))%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~beatCol(type_de), fill = ~beatCol(type_de))%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~beatCol(type_de), weight=0.5)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de))%>%
addProviderTiles(providers$Esri.WorldTopoMap)
rhb_col <- colorFactor(palette=c("#ff9d86", "#ff3100"), rhb$type_de)
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de))%>%
addProviderTiles(providers$Esri.WorldTopoMap)
map_rhb
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~lavaux_col(type_de), weight=0.5)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
lavaux_col <- colorFactor(palette=c("#a8bcf6", "#0c5da5"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~lavaux_col(type_de), weight=0.5)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de))%>%
addProviderTiles(providers$Esri.WorldTopoMap)
map_rhb
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de), weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)
map_rhb
rhb_col <- colorFactor(palette=c("#ff3100", "#ff3100"), rhb$type_de)
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de), weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)
map_rhb
lavaux_col <- colorFactor(palette=c("#0c5da5", "#0c5da5"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~lavaux_col(type_de), weight=0.5)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
lavaux_col <- colorFactor(palette=c("#0c5da5", "#094275"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~lavaux_col(type_de), weight=0.5)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
lavaux_col <- colorFactor(palette=c("#0c5da5", "#094275"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~lavaux_col(type_de), weight=0.5)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
lavaux_col <- colorFactor(palette=c("#0c5da5", "#094275"), lavaux$type_de)
map_lavaux<-leaflet() %>%
addPolygons(data=lavaux, color=~lavaux_col(type_de), weight=0.5)%>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.7))
map_lavaux
rhb_col <- colorFactor(palette=c("#ff3100", "#ff3100"), rhb$type_de)
#creating map
map_rhb <- leaflet() %>%
addPolygons(data=rhb, color=~rhb_col(type_de), weight=0.5)%>%
addProviderTiles(providers$Esri.WorldTopoMap)
map_rhb
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(jsonlite)
library(ggplot2)
library(ggplot2)
library(dplyr)
library(sqldf)
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=";")
#group data and aggregate according to count
lavaux_flickr_subcategories<-sqldf('SELECT category, subcategory, sum(count) count FROM lavaux_flickr_categories GROUP BY subcategory')%>%
na.omit()%>% na.omit()%>%subset(subcategory!='')
#calculate percentage of each category
lavaux_flickr_subcategories$percentage<-lavaux_flickr_subcategories$count/sum(lavaux_flickr_subcategories$count)*100
lavaux_flickr_subcategories$site<-"lavaux"
View(lavaux_flickr_subcategories)
View(lavaux_flickr_subcategories)
#read in data
rhb_flickr_categories<-read.csv("data/rhb_flickr.csv", sep=";")
#group data and aggregate according to count
rhb_flickr_subcategories<- sqldf('SELECT category, subcategory, sum(count) count FROM rhb_flickr_categories GROUP BY subcategory')%>%
na.omit()%>% na.omit()%>%subset(subcategory!='')
#calculate percentage of each category
rhb_flickr_subcategories$percentage<-rhb_flickr_subcategories$count/sum(rhb_flickr_subcategories$count)*100
rhb_flickr_subcategories$site<-"lavaux"
View(rhb_flickr_subcategories)
View(rhb_flickr_subcategories)
rhb_flickr_subcategories$site<-"rhb"
ggplot(rhb_flickr_subcategories, aes(x=category, y=percentage, fill = NAME)) + geom_bar(stat ="subcategory")
ggplot(rhb_flickr_subcategories, aes(x=category, y=percentage, fill = subcategory)) + geom_bar(stat ="identity")
ggplot(rhb_flickr_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")
ggplot(lavaux_flickr_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")
ggplot(lavaux_flickr_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")+
scale_fill_brewer(palette = "Spectral")
ggplot(lavaux_flickr_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")+
scale_fill_brewer(palette = "Set1")
ggplot(lavaux_flickr_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")+
scale_fill_brewer()
mycolors <- colorRampPalette(brewer.pal(18, "Set2"))(nb.cols)
library(RColorBrewer)
mycolors <- colorRampPalette(brewer.pal(18, "Set2"))(nb.cols)
mycolors <- colorRampPalette(brewer.pal(8, "Set2"))(18)
ggplot(lavaux_flickr_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")+
scale_fill_manual(values = mycolors)
mycolors <- colorRampPalette(brewer.pal(8, "Spectral"))(18)
ggplot(lavaux_flickr_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")+
scale_fill_manual(values = mycolors)
lavaux_biophysical <- lavaux_flickr_categories%>%subset(category=="category")
View(lavaux_biophysical)
lavaux_biophysical <- lavaux_flickr_categories%>%subset(category=="biophysical")
View(lavaux_biophysical)
#calculate percentage of each category
lavaux_biophysical$percentage<-lavaux_biophysical$count/sum(lavaux_biophysical$count)*100
View(lavaux_biophysical)
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=";")
#group data and aggregate according to count
lavaux_flickr_subcategories<-sqldf('SELECT category, subcategory, sum(count) count FROM lavaux_flickr_categories GROUP BY subcategory')%>%
na.omit()%>% na.omit()%>%subset(subcategory!='')
#calculate percentage of each category
lavaux_flickr_subcategories$percentage<-lavaux_flickr_subcategories$count/sum(lavaux_flickr_subcategories$count)*100
View(lavaux_flickr_subcategories)
#look at only biopyhisical category
lavaux_biophysical <- lavaux_flickr_subcategories%>%subset(category=="biophysical")
View(lavaux_biophysical)
#calculate percentage of each category
lavaux_biophysical$percentage<-lavaux_biophysical$count/sum(lavaux_biophysical$count)*100
View(lavaux_biophysical)
View(lavaux_flickr_subcategories)
View(lavaux_flickr_subcategories)
lavaux_flickr_subcategories$site<-"lavaux"
#look at only biopyhisical category
lavaux_biophysical <- lavaux_flickr_subcategories%>%subset(category=="biophysical")
#calculate percentage of each category
lavaux_biophysical$percentage<-lavaux_biophysical$count/sum(lavaux_biophysical$count)*100
ggplot(lavaux_flickr_subcategories, aes(x=category, y=percentage, fill = subcategory)) +
geom_bar(stat ="identity")
#look at only biopyhisical category
rhb_biophysical <- rhb_flickr_subcategories%>%subset(category=="biophysical")
#calculate percentage of each category
rhb_biophysical$percentage<-rhb_biophysical$count/sum(rhb_biophysical$count)*100
#bind data
data_biopyhsical<-rhb_biophysical%>%
rbind(lavaux_biophysical)
View(data_biopyhsical)
#png("plots/categories_flickr.png")
ggplot(data_biopyhsical, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
png("plots/biophysical_subcategories_flickr.png")
ggplot(data_biopyhsical, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
dev.off()
#png("plots/biophysical_subcategories_flickr.png")
ggplot(data_biopyhsical, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
#dev.off()
#look at only biopyhisical category
lavaux_cultural <- lavaux_flickr_subcategories%>%subset(category=="cultural")
#calculate percentage of each category
lavaux_cultural$percentage<-lavaux_cultural$count/sum(lavaux_cultural$count)*100
#look at only biopyhisical category
rhb_cultural <- rhb_flickr_subcategories%>%subset(category=="cultural")
#calculate percentage of each category
rhb_cultural$percentage<-rhb_cultural$count/sum(rhb_cultural$count)*100
#bind data
data_cultural<-rhb_cultural%>%
rbind(lavaux_cultural)
#png("plots/biophysical_subcategories_flickr.png")
ggplot(data_cultural, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
#dev.off()
png("plots/cultural_subcategories_flickr.png")
ggplot(data_cultural, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))
dev.off()
#png("plots/cultural_subcategories_flickr.png")
ggplot(data_cultural, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
#dev.off()
png("plots/cultural_subcategories_flickr.png")
ggplot(data_cultural, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
dev.off()
#png("plots/biophysical_subcategories_flickr.png")
ggplot(data_biopyhsical, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
png("plots/biophysical_subcategories_flickr.png")
ggplot(data_biopyhsical, aes(x=subcategory, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
dev.off()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(jsonlite)
library(ggplot2)
library(dplyr)
#plotting data
png("plots/categories_flickr.png")
ggplot(flickr_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
#read in data
lavaux_categories<-read.csv("data/lavaux_landschaft.csv", sep=";")
lavaux_subset<-lavaux_categories%>%subset(category!='')
#group data and aggregate according to count
lavaux_categories_grouped <- lavaux_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()%>%subset(category!='')
#calculate percentage of each category
lavaux_categories_grouped$percentage<-lavaux_categories_grouped$count/sum(lavaux_categories_grouped$count)*100
lavaux_categories_grouped$site<-"lavaux"
#read in data
rhb_categories<-read.csv("data/rhb_landschaft.csv", sep=";")
rhb_subset<-rhb_categories%>%subset(category!='')
#group data and aggregate according to count
rhb_categories_grouped <- rhb_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()%>%subset(category!='')
#calculate percentage of each category
rhb_categories_grouped$percentage<-rhb_categories_grouped$count/sum(rhb_categories_grouped$count)*100
rhb_categories_grouped$site<-"rhb"
#bind data
data_categories<-rhb_categories_grouped%>%
rbind(lavaux_categories_grouped)
#plotting data
png("plots/categories_text.png")
ggplot(data_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
dev.off()
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=",")
#group data and aggregate according to count
lavaux_flickr_grouped <- lavaux_flickr_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()%>%subset(category!='')
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=";")
#group data and aggregate according to count
lavaux_flickr_grouped <- lavaux_flickr_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()%>%subset(category!='')
#calculate percentage of each category
lavaux_flickr_grouped$percentage<-lavaux_flickr_grouped$count/sum(lavaux_flickr_grouped$count)*100
lavaux_flickr_grouped$site<-"lavaux"
#read in data
rhb_flickr_categories<-read.csv("data/rhb_flickr.csv", sep=";")
#group data and aggregate according to count
rhb_flickr_grouped <- rhb_flickr_categories %>% group_by(category)%>%
summarise(count = sum(count))%>% na.omit()%>%subset(category!='')
#calculate percentage of each category
rhb_flickr_grouped$percentage<-rhb_flickr_grouped$count/sum(rhb_flickr_grouped$count)*100
rhb_flickr_grouped$site<-"rhb"
#bind data
flickr_categories<-rhb_flickr_grouped%>%
rbind(lavaux_flickr_grouped)%>%subset(category!='')
#plotting data
png("plots/categories_flickr.png")
ggplot(flickr_categories, aes(x=category, y=percentage, fill=site))+
geom_bar(stat="identity", position = position_dodge(), width = 0.5)+
theme_minimal()+
ylim(0,80)+
ylab("percentage [%]")+
scale_fill_manual(values=c("#0c5da5", "#ff3100"))+
xlab("")
dev.off()
rm(list=ls())
library(DescTools)
library(dplyr)
install.packages("DescTools")
library(DescTools)
rm(list=ls())
library(dplyr)
library(DescTools)
install.packages("DescTools")
library(vcd)
install.packages("vcd")
library(vcd)
??cohen.kappa
??kappa
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=";")
#read in data
lavaux_flickr_categories_fabian<-read.csv("data/fabian/lavaux_flickr.csv", sep=";")
View(lavaux_flickr_categories_fabian)
View(lavaux_flickr_categories)
View(lavaux_flickr_categories_fabian)
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=";")%>%na.omit()
#read in data
lavaux_flickr_categories_fabian<-read.csv("data/fabian/lavaux_flickr.csv", sep=";")%>%na.omit()
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=";")%>%na.omit()%>%%>%subset(subcategory!='')
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=";")%>%na.omit()%>%subset(subcategory!='')
#read in data
lavaux_flickr_categories_fabian<-read.csv("data/fabian/lavaux_flickr.csv", sep=";")%>%na.omit()%>%subset(subcategory!='')
View(lavaux_flickr_categories_fabian)
View(lavaux_flickr_categories_fabian)
View(lavaux_flickr_categories)
View(lavaux_flickr_categories)
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=";")%>%na.omit()%>%slice(1:6)
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=";")%>%na.omit()%>%slice(1:20)
#read in data
lavaux_flickr_categories_fabian<-read.csv("data/fabian/lavaux_flickr.csv", sep=";")%>%na.omit()%>%slice(1:20)
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=";")%>%na.omit()%>%slice(1:10)
#read in data
lavaux_flickr_categories_fabian<-read.csv("data/fabian/lavaux_flickr.csv", sep=";")%>%na.omit()%>%slice(1:10)
ratertab <- xtabs (~ lavaux_flickr_categories$subcategory + lavaux_flickr_categories_fabian$subcategory)
ratertab
Kappa(ratertab, conf.level = 0.95)
Kappa(ratertab)
??Kappa
install.packages("DescTools")
install.packages("DescTools")
library(DescTools)
CohenKappa(ratertab)
#read in data
lavaux_flickr_categories_fabian<-read.csv("data/fabian/lavaux_flickr.csv", sep=";")%>%na.omit()%>%slice(1:5)
#read in data
lavaux_flickr_categories<-read.csv("data/lavaux_flickr.csv", sep=";")%>%na.omit()%>%slice(1:5)
ratertab <- xtabs (~ lavaux_flickr_categories$subcategory + lavaux_flickr_categories_fabian$subcategory)
CohenKappa(ratertab)
ratertab <- xtabs (~ lavaux_flickr_categories$subcategory + lavaux_flickr_categories_fabian$subcategory)
ratertab
??CohenKappa
